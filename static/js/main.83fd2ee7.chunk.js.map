{"version":3,"sources":["components/World/world.module.css","components/India/india.module.css","components/state/stategraph.module.css","components/World/worldgraph.js","components/World/world.js","components/India/indiagraph.js","components/India/india.js","components/state/state.js","components/state/statebar.js","components/state/stategraph.js","components/api/index.js","components/covidtracker.js","App.js","serviceWorker.js","index.js","components/covidtracker.module.css"],"names":["module","exports","Worldgraph","confirmed","recovered","deaths","active","barchart","data","labels","datasets","label","backgroundColor","options","legend","display","title","text","World","worlddata","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","test","infected","CardContent","Typography","color","variant","gutterBottom","start","end","duration","separator","worldbar","Indiagraph","India","countrydata","indiabar","States","selector","FormControl","NativeSelect","defaultValue","onChange","e","target","value","Statebar","Stategraph","name","stateselected","getworlddata","a","axios","get","cases","console","log","getcountrydata","i","push","Covidtracker","props","stateselector","state","setState","stateselect","c","k","statedata","selectdata","total","deceased","selecteddata","statenames","cdata","districts","undefined","cnew","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.83fd2ee7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"world_container__BmceS\",\"test\":\"world_test__ljHcv\",\"infected\":\"world_infected__1F4rp\",\"recovered\":\"world_recovered__2rLmG\",\"deaths\":\"world_deaths__6nVmU\",\"active\":\"world_active__3qqbq\",\"worldbar\":\"world_worldbar__16QZp\",\"label\":\"world_label__1X9mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"india_container__4aDPW\",\"test\":\"india_test__3OV23\",\"indiabar\":\"india_indiabar__3XV5T\",\"infected\":\"india_infected__2ucl1\",\"recovered\":\"india_recovered__1SusV\",\"deaths\":\"india_deaths__2AERR\",\"active\":\"india_active__WQsZ7\",\"label\":\"india_label__3deDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stategraph_container__1RHWa\",\"test\":\"stategraph_test__3zHfO\",\"indiabar\":\"stategraph_indiabar__JcKYY\",\"infected\":\"stategraph_infected__CWzLj\",\"recovered\":\"stategraph_recovered__2gks0\",\"deaths\":\"stategraph_deaths__2A3nh\",\"active\":\"stategraph_active__3zY1a\",\"label\":\"stategraph_label__2PdY2\"};","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Worldgraph = ({confirmed,recovered,deaths,active}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,active,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"current cases worldwide\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Worldgraph;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './world.module.css';\r\nimport cx from 'classnames';\r\nimport Worldgraph from './worldgraph';\r\n\r\n\r\n\r\n\r\nconst World = ({worlddata:{confirmed,recovered,deaths,active}}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n        <label className={styles.label}>WorldWide Cases of Covid19</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={2}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n    \r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed cases</Typography>\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.active)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Active</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={active}\r\n        duration={2}\r\n        separator=','       \r\n  /></Typography>\r\n   \r\n<Typography variant=\"body2\" gutterBottom>Number of Active cases</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={2}\r\n        separator=','       \r\n        /></Typography>\r\n   \r\n<Typography variant=\"body2\" gutterBottom>Number of Recovered cases</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={2}\r\n        separator=','       \r\n  /></Typography>\r\n   \r\n<Typography variant=\"body2\" gutterBottom>Number of Deaths</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item component={Card} className={styles.worldbar} xs={12} md={12}>\r\n    <br />\r\n    <Worldgraph confirmed={confirmed} recovered={recovered} deaths={deaths} active={active} />\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default World;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Indiagraph = ({confirmed,recovered,deaths,active}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,active,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"Covid 19 cases in india\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Indiagraph;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './india.module.css';\r\nimport cx from 'classnames';\r\n\r\nimport Indiagraph from './indiagraph.js';\r\n\r\n\r\n\r\nconst India = ({countrydata:{confirmed,active,recovered,deaths}}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n<label className={styles.label}>Cases of Covid19 in India</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed Cases</Typography>\r\n    \r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.active)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Active</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={active}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\"  gutterBottom>Number of Active Cases</Typography>\r\n   \r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Cases recovered</Typography>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={3}\r\n        separator=','       \r\n  /></Typography>\r\n    \r\n<Typography variant=\"body2\" gutterBottom>Total death Cases</Typography>\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} className={styles.indiabar} xs={12} md={12}>\r\n    <br />\r\n    <Indiagraph confirmed={confirmed} recovered={recovered} deaths={deaths} active={active} />\r\n\r\n</Grid>\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default India;","import React from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\n\r\nconst States = ({selector}) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <FormControl>\r\n                <NativeSelect defaultValue=\"\" onChange={(e)=>{selector(e.target.value)}}>\r\n                <option value=\"select\">Select State</option>\r\n                    <option value=\"AN\">Andaman and Nicobar</option>\r\n    \r\n                    <option value=\"AP\">Andhra pradesh</option>\r\n                    <option value=\"AR\">Arunachal Pradesh</option>\r\n                    <option value=\"AS\">Assam</option>\r\n                    <option value=\"BR\">Bihar</option>\r\n                    <option value=\"CH\">Chandigarh</option>\r\n                    <option value=\"CT\">Chattisgarh</option>\r\n                    <option value=\"DN\">Dadra and Nagar Haveli</option>\r\n                    <option value=\"DD\">Daman and Diu</option>\r\n                    <option value=\"DL\">Delhi</option>\r\n                    <option value=\"GA\">Goa</option>\r\n                    <option value=\"GJ\">Gujarat</option>\r\n                    <option value=\"HR\">Haryana</option>\r\n                    <option value=\"HP\">Himachal Pradesh</option>\r\n                    <option value=\"JK\">Jammu and Kashmir</option>\r\n                    <option value=\"JH\">Jharkhand</option>\r\n                    <option value=\"KA\">Karnataka</option>\r\n                    <option value=\"KL\">Kerala</option>\r\n                    <option value=\"LD\">Lakshadweep</option>\r\n                    <option value=\"MP\">Madhya Pradesh</option>\r\n                    <option value=\"MH\">Maharastra</option>\r\n                    <option value=\"MN\">Manipur</option>\r\n                    <option value=\"ML\">Meghalaya</option>\r\n                    <option value=\"MZ\">Mizoram</option>\r\n                    <option value=\"NL\">Nagaland</option>\r\n                    <option value=\"OR\">Odisha</option>\r\n                    <option value=\"PY\">Pudhucherry</option>\r\n                    <option value=\"PB\">Punjab</option>\r\n                    <option value=\"RJ\">Rajastan</option>\r\n                    <option value=\"SK\">Sikkim</option>\r\n                    <option value=\"TN\">Tamil Nadu</option>\r\n                    <option value=\"TG\">Telangana</option>\r\n                    <option value=\"TR\">Tripura</option>\r\n                    <option value=\"UP\">Uttar Pradesh</option>\r\n                    <option value=\"UT\">Uttarakhand</option>\r\n                    <option value=\"WB\">West Bengal</option>\r\n                    \r\n\r\n\r\n\r\n                </NativeSelect>\r\n\r\n\r\n\r\n        </FormControl>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default States;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Statebar = ({confirmed,recovered,deaths,active}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,active,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"Covid 19 cases\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Statebar;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './stategraph.module.css';\r\nimport cx from 'classnames';\r\n\r\nimport Statebar from './statebar.js';\r\n\r\n\r\n\r\nconst Stategraph = ({data:{confirmed,active,recovered,deaths,name}},{stateselected}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n<label className={styles.label}>Cases of Covid19 in {name}</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed Cases</Typography>\r\n   \r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.active)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Active</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={active}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\"  gutterBottom>Number of Active Cases</Typography>\r\n   \r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Cases recovered</Typography>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={3}\r\n        separator=','       \r\n  /></Typography>\r\n    \r\n<Typography variant=\"body2\" gutterBottom>Total death Cases</Typography>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n <Grid item component={Card} className={styles.indiabar} xs={12} md={12}>\r\n    <br />\r\n    <Statebar confirmed={confirmed} recovered={recovered} deaths={deaths} active={active} />\r\n\r\n</Grid>\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default Stategraph;","\r\nimport axios from 'axios';\r\n// const worldurl=\"https://covid19.mathdro.id/api\";\r\nconst worldurl=\"https://corona.lmao.ninja/v2/all?yesterday\";\r\nconst countryurl=\"https://api.covid19india.org/v4/data.json\";\r\n// const stateurl = \"https://api.covidindiatracker.com/state_data.json\";\r\nexport const getworlddata = async ()=>{\r\ntry{\r\n\r\n    const {data:{cases,active,recovered,deaths}} = await axios.get(worldurl);\r\n    console.log(cases,deaths,active,recovered);\r\n\r\n     return ({confirmed:cases,recovered,deaths,active});\r\n\r\n\r\n}\r\ncatch(error){\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport const getcountrydata= async () =>{\r\ntry{\r\n                // const {data:{confirmed,active,recovered,deaths,achanges,rchanges,dchanges,cchanges}}=await axios.get(countryurl);\r\n                // return ({confirmed,active,recovered,deaths,cchanges,achanges,rchanges,dchanges});\r\n            const data=await axios.get(countryurl);\r\n            // let c=0,active=0,recovered=0,deceased=0;\r\n            const a=[] ;\r\n            for(let i in data){\r\n            //    console.log(data[i])\r\n               a.push(data[i])\r\n\r\n              \r\n               \r\n               \r\n                }\r\n              \r\n               \r\n\r\n            return a[0];\r\n\r\n}\r\n\r\n\r\ncatch(error){\r\n\r\n}\r\n\r\n\r\n\r\n} \r\n","import React from 'react';\r\nimport styles from './covidtracker.module.css';\r\nimport World from './World/world';\r\nimport India from './India/india';\r\nimport States from './state/state';\r\nimport Stategraph from './state/stategraph';\r\nimport {getworlddata,getcountrydata} from './api';\r\n\r\nclass Covidtracker extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        worlddata:{},\r\n        countrydata:{},\r\n        statedata:{},\r\n        statenames:{},\r\n        stateselect:'',\r\n        selecteddata:{}\r\n    };\r\n}\r\nasync componentDidMount(){\r\n\r\n    const k= await getworlddata();\r\n    const cdata=await getcountrydata();\r\n    \r\n    let confirmed=0,recovered=0,deceased=0,active=0;\r\n    for(let i in cdata){\r\n        if (cdata[i].districts){\r\n            confirmed+=cdata[i].total.confirmed\r\n            recovered+=cdata[i].total.recovered\r\n            if (cdata[i].total.deceased === undefined) {\r\n            }\r\n            else{\r\n                deceased+=cdata[i].total.deceased;\r\n            }\r\n          \r\n        }\r\n       \r\n        \r\n    }\r\n    active=confirmed-recovered-deceased;\r\n    let cnew={confirmed:confirmed,active:active,recovered:recovered,deaths:deceased}\r\n    \r\n    \r\n     this.setState({worlddata:k});\r\n     this.setState({statedata:cdata});\r\n\r\n     this.setState({countrydata:cnew});\r\n}\r\n    \r\nstateselector= async (state)=>{\r\n   if (state===\"select\"){\r\n       this.setState({stateselect:\"\"});\r\n   } \r\n   else{\r\n       let c=state;\r\n    let k=this.state.statedata[state];\r\n   \r\n    const selectdata={\r\n    confirmed:k.total.confirmed,\r\n    active:k.total.confirmed-k.total.recovered-k.total.deceased,\r\n    recovered:k.total.recovered,\r\n    deaths:k.total.deceased,\r\n    name:c\r\n   \r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    this.setState({\r\n        selecteddata:selectdata,\r\n        stateselect:c\r\n    \r\n    \r\n    \r\n    })\r\n    \r\n    \r\n    \r\n\r\n\r\n   }\r\n\r\n}\r\n\r\n    render() {\r\n        return (<div className={styles.container}>\r\n            \r\n               \r\n                <World  worlddata={this.state.worlddata}/>\r\n                 <India countrydata={this.state.countrydata}/>\r\n                 \r\n                 <States selector={(state)=>this.stateselector(state)}/>  \r\n         <div>{\r\n            !(this.state.stateselect==='')?(<Stategraph data={this.state.selecteddata} stateselected={this.state.stateselect} />):null\r\n            \r\n            }</div>\r\n\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Covidtracker;","import React from 'react';\nimport Covidtracker  from './components/covidtracker';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Covidtracker />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"covidtracker_container__2gO1H\"};"],"sourceRoot":""}