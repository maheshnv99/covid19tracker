{"version":3,"sources":["components/India/india.module.css","components/state/stategraph.module.css","components/World/world.module.css","components/World/worldgraph.js","components/World/world.js","components/India/indiagraph.js","components/India/india.js","components/api/index.js","components/state/state.js","components/state/statebar.js","components/state/stategraph.js","components/covidtracker.js","App.js","serviceWorker.js","index.js","components/covidtracker.module.css"],"names":["module","exports","Worldgraph","confirmed","recovered","deaths","barchart","data","labels","datasets","label","backgroundColor","options","legend","display","title","text","World","worlddata","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","test","infected","CardContent","Typography","color","variant","gutterBottom","start","end","duration","separator","Date","toDateString","worldbar","Indiagraph","active","India","countrydata","achanges","rchanges","dchanges","cchanges","indiabar","stateurl","getworlddata","a","axios","get","value","getcountrydata","getstatedata","getstatenames","names","i","length","push","state","States","selector","useState","fetchdata","setfetchdata","useEffect","fetch","FormControl","NativeSelect","defaultValue","onChange","e","target","map","index","key","Statebar","Stategraph","stateselected","Covidtracker","props","stateselector","setState","stateselect","k","statedata","selectdata","statenames","selecteddata","q","s","statename","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,uB,mBCAnQD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,SAAW,6BAA6B,SAAW,6BAA6B,UAAY,8BAA8B,OAAS,2BAA2B,OAAS,2BAA2B,MAAQ,4B,mBCAtSD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,SAAW,wBAAwB,MAAQ,uB,iRCgCrNC,EA7BI,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,UAAUC,EAAY,EAAZA,OAC/BC,EACFH,EAAW,kBAAC,IAAD,CACXI,KAAM,CAACC,OAAO,CAAC,YAAY,YAAY,UACvCC,SAAS,CAAC,CAACC,MAAM,QACjBC,gBAAgB,CAAC,oBAAoB,oBAAoB,mBACzDJ,KAAK,CAACJ,EAAUC,EAAUC,MAK1BO,QAAS,CAACC,OAAO,CAACC,SAAQ,GAC7BC,MAAM,CAACD,SAAQ,EAAME,KAAK,8BAMnB,KAKR,OAAQ,6BACHb,EAAUG,EAAS,OC6DbW,EA/ED,SAAC,GAAyD,IAAD,IAAvDC,UAAWf,EAA4C,EAA5CA,UAAUC,EAAkC,EAAlCA,UAAUC,EAAwB,EAAxBA,OAAOc,EAAiB,EAAjBA,WAClD,OAAIhB,EAEJ,yBAAKiB,UAAWC,IAAOC,WACnB,2BAAOF,UAAWC,IAAOX,OAAzB,8BACR,kBAACa,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAEpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WAE5E,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CACAE,MAAO,EACPC,IAAKrC,EACLsC,SAAU,EACVC,UAAU,OAGd,kBAACP,EAAA,EAAD,CAAYC,MAAM,cAAcE,cAAY,GAAC,6BAA7C,mBAAmE,6BAAO,IAAIK,KAAKxB,GAAYyB,gBACnG,kBAACT,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,+BAKA,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOjB,YAC5E,kBAAC8B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKpC,EACLqC,SAAU,EACVC,UAAU,OAEd,kBAACP,EAAA,EAAD,CAAYC,MAAM,cAAcE,cAAY,GAAC,6BAA7C,mBAAmE,6BAAO,IAAIK,KAAKxB,GAAYyB,gBACnG,kBAACT,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,+BAUA,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOhB,SAC5E,kBAAC6B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,UACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKnC,EACLoC,SAAU,EACVC,UAAU,OAEd,kBAACP,EAAA,EAAD,CAAYC,MAAM,cAAcE,cAAY,GAAC,6BAA7C,mBAAmE,6BAAO,IAAIK,KAAKxB,GAAYyB,gBACnG,kBAACT,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,sBASA,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOwB,SAAUhB,GAAI,GAAIC,GAAI,IAChE,6BACA,kBAAC,EAAD,CAAY3B,UAAWA,EAAWC,UAAWA,EAAWC,OAAQA,OAjE1C,a,iBCsBXyC,EA7BI,SAAC,GAAyC,IAAxC3C,EAAuC,EAAvCA,UAAUC,EAA6B,EAA7BA,UAAUC,EAAmB,EAAnBA,OAAO0C,EAAY,EAAZA,OACtCzC,EACFH,EAAW,kBAAC,IAAD,CACXI,KAAM,CAACC,OAAO,CAAC,YAAY,SAAS,YAAY,UAChDC,SAAS,CAAC,CAACC,MAAM,QACjBC,gBAAgB,CAAC,oBAAoB,oBAAoB,oBAAoB,mBAC7EJ,KAAK,CAACJ,EAAU4C,EAAO3C,EAAUC,MAKjCO,QAAS,CAACC,OAAO,CAACC,SAAQ,GAC7BC,MAAM,CAACD,SAAQ,EAAME,KAAK,8BAMnB,KAKR,OAAQ,6BACHb,EAAUG,EAAS,OCqGb0C,EAvHD,SAAC,GAA2F,IAAD,IAAzFC,YAAa9C,EAA4E,EAA5EA,UAAU4C,EAAkE,EAAlEA,OAAO3C,EAA2D,EAA3DA,UAAUC,EAAiD,EAAjDA,OAAO6C,EAA0C,EAA1CA,SAASC,EAAiC,EAAjCA,SAASC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,SACtF,OAAIlD,EAEJ,yBAAKiB,UAAWC,IAAOC,WAC3B,2BAAOF,UAAWC,IAAOX,OAAzB,6BACA,kBAACa,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAEpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WAE5E,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CACAE,MAAO,EACPC,IAAKrC,EACLsC,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,6BACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,mBAAsD,kBAAC,IAAD,CAClDC,MAAO,EACPC,IAAKa,EACLZ,SAAU,EACVC,UAAU,SAMlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAO0B,SAE5E,kBAACb,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,UACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CACAE,MAAO,EACPC,IAAKO,EACLN,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAASC,cAAY,GAAzC,0BACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,aAAgD,kBAAC,IAAD,CAC5CC,MAAO,EACPC,IAAKU,EACLT,SAAU,EACVC,UAAU,SAOlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOjB,YAC5E,kBAAC8B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKpC,EACLqC,SAAU,EACVC,UAAU,OAElB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,6BACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,mBAAsD,kBAAC,IAAD,CAC9CC,MAAO,EACPC,IAAKW,EACLV,SAAU,EACVC,UAAU,SAWlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOhB,SAC5E,kBAAC6B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,UACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKnC,EACLoC,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,qBACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,cAAiD,kBAAC,IAAD,CACzCC,MAAO,EACPC,IAAKY,EACLX,SAAU,EACVC,UAAU,SAWlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOiC,SAAUzB,GAAI,GAAIC,GAAI,IAChE,6BACA,kBAAC,EAAD,CAAY3B,UAAWA,EAAWC,UAAWA,EAAWC,OAAQA,EAAQ0C,OAAQA,OA1G1D,a,2CCPpBQ,EAAW,oDACJC,EAAY,uCAAG,sCAAAC,EAAA,+EAGqCC,IAAMC,IANxD,kCAGa,2BAGjBpD,KAAMJ,EAHW,EAGXA,UAAUC,EAHC,EAGDA,UAAUC,EAHT,EAGSA,OAAOc,EAHhB,EAGgBA,WAHhB,kBAIhB,CAAChB,UAAUA,EAAUyD,MAAMxD,UAAUA,EAAUwD,MAAMvD,OAAOA,EAAOuD,MAAMzC,eAJzD,4FAAH,qDAcZ0C,EAAc,uCAAE,8CAAAJ,EAAA,+EAEsEC,IAAMC,IAlBxF,gDAgBY,2BAEdpD,KAAMJ,EAFQ,EAERA,UAAU4C,EAFF,EAEEA,OAAO3C,EAFT,EAESA,UAAUC,EAFnB,EAEmBA,OAAO6C,EAF1B,EAE0BA,SAASC,EAFnC,EAEmCA,SAASC,EAF5C,EAE4CA,SAASC,EAFrD,EAEqDA,SAFrD,kBAGb,CAAClD,YAAU4C,SAAO3C,YAAUC,SAAOgD,WAASH,WAASC,WAASC,aAHjD,4FAAF,qDAgBdU,EAAY,uCAAE,8BAAAL,EAAA,+EAEIC,IAAMC,IAAIJ,GAFd,uBAERhD,EAFQ,EAERA,KAFQ,kBAITA,GAJS,yFAAF,qDAcRwD,EAAa,uCAAE,kCAAAN,EAAA,+EAEGC,IAAMC,IAAIJ,GAFb,OAIhB,IAJgB,SAEThD,EAFS,EAETA,KACHyD,EAAM,GACFC,EAAE,EAAEA,EAAE1D,EAAK2D,OAAOD,IACtBD,EAAMG,KAAK5D,EAAK0D,GAAGG,OALP,yBAUVJ,GAVU,4FAAF,qDCFfK,EA3CA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACIC,mBAAS,IADb,mBACpBC,EADoB,KACVC,EADU,KAkB3B,OAfAC,qBAAU,YAIC,uCAAE,sBAAAjB,EAAA,kEACTgB,EADS,SACUV,IADV,6EAAF,qDAKfY,KAEE,CAACF,IAKK,kBAACG,EAAA,EAAD,KACQ,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAKV,EAASU,EAAEC,OAAOrB,SAC5D,4BAAQA,MAAM,UAAd,gBACfY,EAAUU,KAAI,SAACd,EAAMe,GAAP,OAAe,4BAAQC,IAAKD,EAAOvB,MAAOuB,GAAQf,S,iBCOtDiB,EA7BE,SAAC,GAAyC,IAAxClF,EAAuC,EAAvCA,UAAUC,EAA6B,EAA7BA,UAAUC,EAAmB,EAAnBA,OAAO0C,EAAY,EAAZA,OACpCzC,EACFH,EAAW,kBAAC,IAAD,CACXI,KAAM,CAACC,OAAO,CAAC,YAAY,SAAS,YAAY,UAChDC,SAAS,CAAC,CAACC,MAAM,QACjBC,gBAAgB,CAAC,oBAAoB,oBAAoB,oBAAoB,mBAC7EJ,KAAK,CAACJ,EAAU4C,EAAO3C,EAAUC,MAKjCO,QAAS,CAACC,OAAO,CAACC,SAAQ,GAC7BC,MAAM,CAACD,SAAQ,EAAME,KAAK,qBAMnB,KAKR,OAAQ,6BACHb,EAAUG,EAAS,OCqGbgF,EAvHI,SAAC,EAAD,GAAqG,IAAD,IAAlG/E,KAAMJ,EAA4F,EAA5FA,UAAU4C,EAAkF,EAAlFA,OAAO3C,EAA2E,EAA3EA,UAAUC,EAAiE,EAAjEA,OAAO6C,EAA0D,EAA1DA,SAASC,EAAiD,EAAjDA,SAASC,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,SAA+B,EAAnBkC,cAChG,OAAIpF,EAEJ,yBAAKiB,UAAWC,IAAOC,WAC3B,2BAAOF,UAAWC,IAAOX,OAAzB,oBACA,kBAACa,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAEpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WAE5E,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CACAE,MAAO,EACPC,IAAKrC,EACLsC,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,6BACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,mBAAsD,kBAAC,IAAD,CAClDC,MAAO,EACPC,IAAKa,EACLZ,SAAU,EACVC,UAAU,SAMlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAO0B,SAE5E,kBAACb,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,UACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CACAE,MAAO,EACPC,IAAKO,EACLN,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAASC,cAAY,GAAzC,0BACI,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,aAAgD,kBAAC,IAAD,CAC5CC,MAAO,EACPC,IAAKU,EACLT,SAAU,EACVC,UAAU,SAOlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOjB,YAC5E,kBAAC8B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,aACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKpC,EACLqC,SAAU,EACVC,UAAU,OAElB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,6BACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,mBAAsD,kBAAC,IAAD,CAC9CC,MAAO,EACPC,IAAKW,EACLV,SAAU,EACVC,UAAU,SAWlB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOhB,SAC5E,kBAAC6B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAKC,cAAY,GAAzD,UACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,MAApB,IAA0B,kBAAC,IAAD,CAClBE,MAAO,EACPC,IAAKnC,EACLoC,SAAU,EACVC,UAAU,OAGlB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQC,cAAY,GAAxC,qBACA,kBAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,GAArC,cAAiD,kBAAC,IAAD,CACzCC,MAAO,EACPC,IAAKY,EACLX,SAAU,EACVC,UAAU,SAWjB,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOiC,SAAUzB,GAAI,GAAIC,GAAI,IACjE,6BACA,kBAAC,EAAD,CAAU3B,UAAWA,EAAWC,UAAWA,EAAWC,OAAQA,EAAQ0C,OAAQA,OA1GxD,aCkFXyC,E,kDArFf,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA6BVC,cA9BmB,uCA8BJ,WAAOtB,GAAP,iBAAAX,EAAA,sDACA,WAARW,EACA,EAAKuB,SAAS,CAACC,YAAY,MAG1BC,EAAE,EAAKzB,MAAM0B,UAAU1B,GACrB2B,EAAW,CACjB5F,UAAU0F,EAAE1F,UACZ4C,OAAO8C,EAAE9C,OACT3C,UAAUyF,EAAEzF,UACZC,OAAOwF,EAAExF,OACTgD,SAASwC,EAAExC,SACXH,SAAS2C,EAAE3C,SACXC,SAAS0C,EAAE1C,SACXC,SAASyC,EAAEzC,UAUX,EAAKuC,SAAS,CAACC,YAAY,EAAKxB,MAAM4B,WAAW5B,GAC7C6B,aAAaF,KAzBN,2CA9BI,sDAGf,EAAK3B,MAAQ,CACTlD,UAAU,GACV+B,YAAY,GACZ6C,UAAU,GACVE,WAAW,GACXJ,YAAY,GACZK,aAAa,IATF,E,wMAcAzC,I,cAATqC,E,gBACShC,I,cAATqC,E,gBACSpC,I,OAEf,IAFMqC,E,OACFC,EAAU,GACNnC,EAAE,EAAEA,EAAEkC,EAAEjC,OAAOD,IACnBmC,EAAUjC,KAAKgC,EAAElC,GAAGG,OAGxBiC,KAAKV,SAAS,CAACK,WAAWI,IAC1BC,KAAKV,SAAS,CAACG,UAAUK,IAEzBE,KAAKV,SAAS,CAACzE,UAAU2E,IAEzBQ,KAAKV,SAAS,CAAC1C,YAAYiD,I,sIA0CjB,IAAD,OACL,OAAQ,yBAAK9E,UAAWC,IAAOC,WAEvB,kBAAC,EAAD,CAAQJ,UAAWmF,KAAKjC,MAAMlD,YAC9B,kBAAC,EAAD,CAAO+B,YAAaoD,KAAKjC,MAAMnB,cAC9B,kBAAC,EAAD,CAAQqB,SAAU,SAACF,GAAD,OAAS,EAAKsB,cAActB,MACtD,6BAC8B,KAAzBiC,KAAKjC,MAAMwB,YAAmB,kBAAC,EAAD,CAAYrF,KAAM8F,KAAKjC,MAAM6B,aAAcV,cAAec,KAAKjC,MAAMwB,cAAiB,W,GA7EvGU,IAAMC,W,OCKlBC,MARf,WACE,OACE,yBAAKpF,UAAU,OACd,kBAAC,EAAD,QCKeqF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBExI5B5H,EAAOC,QAAU,CAAC,UAAY,kC","file":"static/js/main.3865a6af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"india_container__GhP6U\",\"test\":\"india_test__2q2PH\",\"indiabar\":\"india_indiabar__3Ltk6\",\"infected\":\"india_infected__2fGEW\",\"recovered\":\"india_recovered__1y7q6\",\"deaths\":\"india_deaths__18Uba\",\"active\":\"india_active__2l7W2\",\"label\":\"india_label__3Q8-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stategraph_container__gMr57\",\"test\":\"stategraph_test__2pPyQ\",\"indiabar\":\"stategraph_indiabar__2ACT7\",\"infected\":\"stategraph_infected__1oTWk\",\"recovered\":\"stategraph_recovered__2BSkr\",\"deaths\":\"stategraph_deaths__1SiuH\",\"active\":\"stategraph_active__1w40j\",\"label\":\"stategraph_label__2zP1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"world_container__1YWLM\",\"test\":\"world_test__d3_iG\",\"infected\":\"world_infected__1VEb2\",\"recovered\":\"world_recovered__2RCK2\",\"deaths\":\"world_deaths__8gb53\",\"worldbar\":\"world_worldbar__YtsuT\",\"label\":\"world_label__2L9u0\"};","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Worldgraph = ({confirmed,recovered,deaths}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"current cases worldwide\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Worldgraph;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './world.module.css';\r\nimport cx from 'classnames';\r\nimport Worldgraph from './worldgraph';\r\n\r\n\r\n\r\n\r\nconst World = ({worlddata:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n        <label className={styles.label}>WorldWide Cases of Covid19</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={3} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={2}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n    <Typography color=\"textPrimary\" gutterBottom><br />Last updated on:<br />{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed cases</Typography>\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={2}\r\n        separator=','       \r\n        /></Typography>\r\n    <Typography color=\"textPrimary\" gutterBottom><br />Last updated on:<br />{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Recovered cases</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={2}\r\n        separator=','       \r\n  /></Typography>\r\n    <Typography color=\"textPrimary\" gutterBottom><br />Last Updated on:<br />{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Deaths</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n<Grid item component={Card} className={styles.worldbar} xs={12} md={12}>\r\n    <br />\r\n    <Worldgraph confirmed={confirmed} recovered={recovered} deaths={deaths} />\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default World;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Indiagraph = ({confirmed,recovered,deaths,active}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,active,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"Covid 19 cases in india\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Indiagraph;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './india.module.css';\r\nimport cx from 'classnames';\r\n\r\nimport Indiagraph from './indiagraph.js';\r\n\r\n\r\n\r\nconst India = ({countrydata:{confirmed,active,recovered,deaths,achanges,rchanges,dchanges,cchanges}}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n<label className={styles.label}>Cases of Covid19 in India</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed Cases</Typography>\r\n    <Typography variant=\"h6\" gutterBottom>Newly Confirmed:<Countup \r\n        start={0}\r\n        end={cchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.active)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Active</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={active}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\"  gutterBottom>Number of Active Cases</Typography>\r\n    <Typography variant=\"h6\" gutterBottom>New Cases:<Countup \r\n        start={0}\r\n        end={achanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Cases recovered</Typography>\r\n<Typography variant=\"h6\" gutterBottom>Newly recovered:<Countup \r\n        start={0}\r\n        end={rchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={3}\r\n        separator=','       \r\n  /></Typography>\r\n    \r\n<Typography variant=\"body2\" gutterBottom>Total death Cases</Typography>\r\n<Typography variant=\"h6\" gutterBottom>New Deaths:<Countup \r\n        start={0}\r\n        end={dchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} className={styles.indiabar} xs={12} md={12}>\r\n    <br />\r\n    <Indiagraph confirmed={confirmed} recovered={recovered} deaths={deaths} active={active} />\r\n\r\n</Grid>\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default India;","\r\nimport axios from 'axios';\r\nconst worldurl=\"https://covid19.mathdro.id/api\";\r\nconst countryurl=\"https://api.covidindiatracker.com/total.json\";\r\nconst stateurl = \"https://api.covidindiatracker.com/state_data.json\";\r\nexport const getworlddata = async ()=>{\r\ntry{\r\n\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(worldurl);\r\n    return ({confirmed:confirmed.value,recovered:recovered.value,deaths:deaths.value,lastUpdate});\r\n\r\n\r\n}\r\ncatch(error){\r\n\r\n\r\n}\r\n\r\n}\r\nexport const getcountrydata= async () =>{\r\ntry{\r\n        const {data:{confirmed,active,recovered,deaths,achanges,rchanges,dchanges,cchanges}}=await axios.get(countryurl);\r\n        return ({confirmed,active,recovered,deaths,cchanges,achanges,rchanges,dchanges});\r\n\r\n\r\n}\r\n\r\n\r\ncatch(error){\r\n\r\n}\r\n\r\n\r\n\r\n} \r\nexport const getstatedata= async () =>{\r\n    try{\r\n            const {data}=await axios.get(stateurl);\r\n         \r\n           return data;\r\n    \r\n    \r\n    }\r\n    catch(error){\r\n    \r\n    }\r\n    \r\n    \r\n    } \r\n    export const getstatenames= async () =>{\r\n        try{\r\n                const {data}=await axios.get(stateurl);\r\n                let names=[];\r\n                for(let i=0;i<data.length;i++){\r\n                    names.push(data[i].state);\r\n\r\n                }\r\n                \r\n             \r\n               return names;\r\n        \r\n        \r\n        }\r\n        catch(error){\r\n        \r\n        }\r\n\r\n    }","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport {getstatenames} from '../api';\r\n\r\nconst States = ({selector}) => {\r\n    const [fetchdata,setfetchdata]=useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n\r\n    const fetch= async () =>{\r\n        setfetchdata(await getstatenames());\r\n\r\n\r\n}\r\nfetch();\r\n\r\n},[setfetchdata]);\r\n\r\n\r\n\r\n    return (\r\n        <FormControl>\r\n                <NativeSelect defaultValue=\"\" onChange={(e)=>{selector(e.target.value)}}>\r\n                    <option value=\"select\">Select State</option>\r\n    {fetchdata.map((state,index)=><option key={index} value={index}>{state}</option>)}\r\n\r\n\r\n\r\n                </NativeSelect>\r\n\r\n\r\n\r\n        </FormControl>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default States;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Statebar = ({confirmed,recovered,deaths,active}) => {\r\n    const barchart=(\r\n        confirmed?(<Bar \r\n        data={{labels:[\"Confirmed\",\"Active\",\"Recovered\",\"Deaths\"],\r\n        datasets:[{label:\"Cases\",\r\n        backgroundColor:['rgba(0,0,255,0.5)','rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,0,0.5)'],\r\n        data:[confirmed,active,recovered,deaths]\r\n       }]\r\n        \r\n        \r\n        }}\r\n        options={{legend:{display:false}\r\n    ,title:{display:true ,text:\"Covid 19 cases\"}\r\n    \r\n    }}\r\n        \r\n        \r\n        \r\n        />):null\r\n    )\r\n    \r\n    \r\n    \r\n    return (<div>\r\n        {confirmed?barchart:null}\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Statebar;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport Countup from 'react-countup';\r\nimport styles from './stategraph.module.css';\r\nimport cx from 'classnames';\r\n\r\nimport Statebar from './statebar.js';\r\n\r\n\r\n\r\nconst Stategraph = ({data:{confirmed,active,recovered,deaths,achanges,rchanges,dchanges,cchanges}},{stateselected}) => {\r\n    if(!confirmed){return(\"loading..\");}\r\n    return(\r\n    <div className={styles.container}>\r\n<label className={styles.label}>Cases of Covid19</label>\r\n<Grid container spacing={3} justify=\"center\">\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.infected)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Confirmed</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={confirmed}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Confirmed Cases</Typography>\r\n    <Typography variant=\"h6\" gutterBottom>Newly Confirmed:<Countup \r\n        start={0}\r\n        end={cchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.active)}>\r\n\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Active</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup \r\n        start={0}\r\n        end={active}\r\n        duration={3}\r\n        separator=','       \r\n        />\r\n        </Typography>\r\n<Typography variant=\"body2\"  gutterBottom>Number of Active Cases</Typography>\r\n    <Typography variant=\"h6\" gutterBottom>New Cases:<Countup \r\n        start={0}\r\n        end={achanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n</CardContent>\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={recovered}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n<Typography variant=\"body2\" gutterBottom>Number of Cases recovered</Typography>\r\n<Typography variant=\"h6\" gutterBottom>Newly recovered:<Countup \r\n        start={0}\r\n        end={rchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={2} className={cx(styles.test,styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"> <Countup \r\n        start={0}\r\n        end={deaths}\r\n        duration={3}\r\n        separator=','       \r\n  /></Typography>\r\n    \r\n<Typography variant=\"body2\" gutterBottom>Total death Cases</Typography>\r\n<Typography variant=\"h6\" gutterBottom>New Deaths:<Countup \r\n        start={0}\r\n        end={dchanges}\r\n        duration={3}\r\n        separator=','       \r\n        /></Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n\r\n\r\n</Grid>\r\n\r\n <Grid item component={Card} className={styles.indiabar} xs={12} md={12}>\r\n    <br />\r\n    <Statebar confirmed={confirmed} recovered={recovered} deaths={deaths} active={active} />\r\n\r\n</Grid>\r\n\r\n\r\n</Grid>\r\n\r\n\r\n            </div>\r\n\r\n\r\n);}\r\nexport default Stategraph;","import React from 'react';\r\nimport styles from './covidtracker.module.css';\r\nimport World from './World/world';\r\nimport India from './India/india';\r\nimport States from './state/state';\r\nimport Stategraph from './state/stategraph';\r\nimport {getworlddata,getcountrydata,getstatedata} from './api';\r\nclass Covidtracker extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        worlddata:{},\r\n        countrydata:{},\r\n        statedata:{},\r\n        statenames:{},\r\n        stateselect:'',\r\n        selecteddata:{}\r\n    };\r\n}\r\nasync componentDidMount(){\r\n\r\n    const k= await getworlddata();\r\n    const q= await getcountrydata();\r\n    const s= await getstatedata();\r\n    let statename=[];\r\n    for(let i=0;i<s.length;i++){\r\n        statename.push(s[i].state);\r\n\r\n    }\r\n    this.setState({statenames:statename});\r\n    this.setState({statedata:s});\r\n    \r\n    this.setState({worlddata:k});\r\n\r\n    this.setState({countrydata:q});\r\n}\r\n    \r\nstateselector= async (state)=>{\r\n   if (state===\"select\"){\r\n       this.setState({stateselect:\"\"});\r\n   } \r\n   else{\r\n    let k=this.state.statedata[state];\r\n    const selectdata={\r\n    confirmed:k.confirmed,\r\n    active:k.active,\r\n    recovered:k.recovered,\r\n    deaths:k.deaths,\r\n    cchanges:k.cchanges,\r\n    achanges:k.achanges,\r\n    rchanges:k.rchanges,\r\n    dchanges:k.dchanges,\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    this.setState({stateselect:this.state.statenames[state],\r\n        selecteddata:selectdata\r\n    \r\n    \r\n    \r\n    })\r\n    \r\n    \r\n    \r\n\r\n\r\n   }\r\n\r\n}\r\n\r\n    render() {\r\n        return (<div className={styles.container}>\r\n\r\n                <World  worlddata={this.state.worlddata}/>\r\n                <India countrydata={this.state.countrydata}/>\r\n                 <States selector={(state)=>this.stateselector(state)}/> \r\n         <div>{\r\n            !(this.state.stateselect==='')?(<Stategraph data={this.state.selecteddata} stateselected={this.state.stateselect} />):null\r\n            \r\n            }</div>\r\n\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Covidtracker;","import React from 'react';\nimport Covidtracker  from './components/covidtracker';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Covidtracker />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"covidtracker_container__1chM3\"};"],"sourceRoot":""}